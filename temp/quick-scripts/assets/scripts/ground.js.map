{"version":3,"sources":["ground.js"],"names":["cc","Class","extends","Component","properties","start","onCollisionEnter","other","self","onCollisionStay","onCollisionExit"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBI,CAER,CA3BI;;AA4BL;;;;;AAKAC,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACvC;;;;;;;;;;;;;;;;;;;;;;;AAyBD,KA3DI;AA4DL;;;;;AAKAC,qBAAiB,yBAAUF,KAAV,EAAiBC,IAAjB,EAAuB;AACrC;;AAEF,KApEI;AAqEL;;;;;AAKAE,qBAAiB,yBAAUH,KAAV,EAAiBC,IAAjB,EAAuB;AACrC;AACF;;AAED;AA9EK,CAAT","file":"ground.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n    /**\r\n     * 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n      /*  console.log('on collision enter');\r\n        console.log('self=' , self);\r\n        console.log('other=' , other);\r\n       \r\n        if(self.tag >= 20 && other.tag < 20){\r\n            console.log(self);\r\n            var angle = this.getAngle(self.node.position,other.node.position);\r\n            console.log(\"angle=\"+angle);\r\n            if(angle>=45 && angle<135){\r\n                other.node.y =  other.node.y + 1;\r\n            }else if(angle>=135 && angle<225){\r\n                other.node.x =  other.node.x - 1;\r\n            }else if(angle>=225 && angle<315){\r\n                other.node.y =  other.node.y - 1;\r\n            }else{\r\n                other.node.x =  other.node.x + 1;\r\n            }\r\n            var x1 = other.world.aabb.x;\r\n            var y1 = other.world.aabb.y;\r\n            var x2 = other.world.aabb.width + x1;\r\n            var y2 = other.world.aabb.height + y1;\r\n\r\n        }*/\r\n            \r\n\r\n    },\r\n    /**\r\n     * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionStay: function (other, self) {\r\n       // console.log('on collision stay');\r\n        \r\n    },\r\n    /**\r\n     * 当碰撞结束后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionExit: function (other, self) {\r\n       // console.log('on collision exit');\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}