{"version":3,"sources":["star.js"],"names":["objectPool","require","mathUtil","cc","Class","extends","Component","properties","speed","angle","trackRadius","game","isActionOver","canvas","Node","onLoad","console","log","self","manager","director","getCollisionManager","enabled","systemEvent","on","SystemEvent","EventType","KEY_UP","event","keyCode","macro","KEY","w","startRun","Contraction","displacement","x1","Math","cos","PI","y1","sin","action","moveTo","v2","action2","node","x","y","seq","sequence","runAction","start","onEnable","find","update","dt","onCollisionEnter","other","timestamp","Date","getTime","tag","stopAllActions","parent","setPosition","starPool","put","worldPos","convertToWorldSpaceAR","StarSprite","getChildByName","newPos","convertToNodeSpaceAR","p1","p2","newVec2","turnByAngle","moveBy","scheduleOnce","finished","callFunc","myAction","onCollisionStay","onCollisionExit"],"mappings":"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","file":"star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n// let mvs = require(\"Matchvs\");\r\n// let Glb = require(\"../Glb\");\r\nlet objectPool = require(\"objectPool\");\r\nlet mathUtil = require(\"mathUtil\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        speed:1,\r\n        angle:0,\r\n        trackRadius:0,\r\n        game:null,\r\n        isActionOver:true,\r\n        canvas:cc.Node,\r\n        \r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n        console.log('star onLoad');\r\n        let self = this;\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n       // this.canvas = cc.find(\"Canvas\");\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, (event)=>{\r\n            if(event.keyCode == cc.macro.KEY.w){\r\n                self.startRun();\r\n            }\r\n                \r\n        }, this); \r\n     },\r\n    Contraction(displacement){\r\n        var x1 = (this.trackRadius - displacement) * Math.cos(this.angle * Math.PI / 180);\r\n        var y1 = (this.trackRadius - displacement) * Math.sin(this.angle * Math.PI / 180);\r\n        var action = cc.moveTo(0.3, cc.v2(x1,y1));\r\n        var action2 = cc.moveTo(0.3, cc.v2(this.node.x,this.node.y));\r\n        //var reverseAction = action.reverse;\r\n        console.log(\"this.trackRadius =\" + this.trackRadius +\"_\"+ x1+\",\"+y1);\r\n        var seq = cc.sequence(action,action2);\r\n        this.node.runAction(seq);\r\n    },\r\n  \r\n    start () {\r\n        console.log('start');\r\n    },\r\n    onEnable(){\r\n        console.log('onEnable');\r\n        this.canvas = cc.find(\"Canvas/background\");\r\n    },\r\n    update (dt) {\r\n         \r\n       \r\n     },\r\n    /**\r\n     * 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n        var timestamp=new Date().getTime();\r\n        console.log('on collision enter');\r\n        //遇到的不是同组的且不是同属的且不是移动的\r\n        if(self.tag != other.tag && self.tag+10 != other.tag  && other.tag != -2){\r\n            if(self.tag == -2){//移动中的星星\r\n                if(other.tag == 20 || other.tag == 22){\r\n                    this.node.stopAllActions();\r\n                    self.tag == -1;\r\n                }\r\n            }else if(self.tag == -1){//无主的星星\r\n\r\n                if(other.tag == -1){//撞到无主的星星\r\n\r\n                }else if(other.tag < 10 ){//撞到玩家的星星\r\n                    self.tag = other.tag;\r\n                    //let p2 =  this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n                    //var newVec2 = other.node.parent.convertToNodeSpaceAR(p2);\r\n                    console.log('无主的星星撞到玩家的星星');\r\n                    this.node.parent = other.node.parent;\r\n                    this.node.setPosition(cc.v2(0,0));\r\n                    \r\n                }else if(other.tag == 20){//撞到障碍物\r\n                    console.log('starPool.put');\r\n                    objectPool.starPool.put(this.node);\r\n                }else if(other.tag == 22){//边界\r\n\r\n                }else{//撞到玩家\r\n                    self.tag = other.tag-10;\r\n                    let worldPos =  this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n                    let StarSprite = other.node.getChildByName('StarSprite');\r\n                    var newPos = StarSprite.convertToNodeSpaceAR(worldPos);\r\n                    this.node.parent = StarSprite;\r\n                    this.node.setPosition(newPos);\r\n                    console.log('无主的星星撞到玩家');\r\n                }\r\n            }else{//玩家的星星\r\n                console.log('玩家的星星');\r\n                if(other.tag == -1){//撞到无主的星星\r\n\r\n                }else if(other.tag < 10 ){//撞到玩家的星星\r\n                    console.log('玩家的星星碰到对方玩家的星星');\r\n                   // objectPool.starPool.put(this.node);\r\n                    let p1 = other.node.convertToWorldSpaceAR(cc.v2(0, 0));//对方节点\r\n                    let p2 =  this.node.convertToWorldSpaceAR(cc.v2(0, 0));//己方节点\r\n                    let newVec2 = this.canvas.convertToNodeSpaceAR(p2);//星星在画布下的位置\r\n                    this.node.parent = this.canvas;\r\n                    this.node.setPosition(newVec2);\r\n                    let v2 = mathUtil.turnByAngle(p1,p2,90,270,false);//反弹向量\r\n                    var action = cc.moveBy(0.3, v2);\r\n                    this.scheduleOnce(function() {\r\n                        self.tag = -2;\r\n                    }, 0.1);\r\n                    this.scheduleOnce(function() {\r\n                        self.tag = -1;\r\n                    }, 0.5);\r\n                   // var finished = cc.callFunc(()=>{\r\n                   //    console.log('动作结束',this);\r\n                   //    self.tag = -1;\r\n                   // }, this, 0);\r\n                   //var myAction = cc.sequence(action, finished);\r\n                    this.runAction(action);\r\n                }else if(other.tag == 20){//撞到障碍物\r\n                    let p1 = other.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n                    let p2 =  this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n                    let v2 = mathUtil.turnByAngle(p1,p2,90,270,false);//反弹向量\r\n                    //if(){}\r\n                    let newVec2 = this.canvas.convertToNodeSpaceAR(p2);//星星在画布下的位置\r\n                  //  console.log('玩家的星星撞到障碍物','starTag =' + self.tag + \" psoi1\" + newVec2);\r\n                   \r\n                  //  console.log('玩家的星星从障碍物反弹到','starTag =' + self.tag + \" psoi2\" + v2);\r\n                    this.node.parent = this.canvas;\r\n                    this.node.setPosition(newVec2);\r\n                    var action = cc.moveBy(0.3, v2);\r\n                    self.tag = -2;\r\n                    var finished = cc.callFunc(()=>{\r\n                       self.tag = -1;\r\n                    }, this, 0);\r\n                    var myAction = cc.sequence(action, finished);\r\n                    this.runAction(myAction);\r\n\r\n                }else if(other.tag == 22){//边界\r\n\r\n                }else{//玩家\r\n                    console.log('星星撞到玩家' );\r\n                }\r\n            }\r\n        }\r\n        \r\n     \r\n        console.log('on collision enter time',(timestamp - new Date().getTime()));\r\n    },\r\n    /**\r\n     * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionStay: function (other, self) {\r\n       // console.log('on collision stay');\r\n\r\n    },\r\n    /**\r\n     * 当碰撞结束后调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionExit: function (other, self) {\r\n        console.log('on collision exit');\r\n        \r\n        if(self.tag != other.tag && self.tag+10 != other.tag  && other.tag != -2){\r\n            if(self.tag == -2){//移动中的星星\r\n                if(other.tag == 20 || other.tag == 22){\r\n                    \r\n                }\r\n            }else if(self.tag == -1){//无主的星星\r\n                if(other.tag == -1){//撞到无主的星星\r\n\r\n                }else if(other.tag < 10 ){//撞到玩家的星星\r\n                    \r\n                }else if(other.tag == 20){//撞到障碍物\r\n\r\n                }else if(other.tag == 22){//边界\r\n\r\n                }\r\n            }else{//玩家的星星\r\n                if(other.tag == -1){//撞到无主的星星\r\n\r\n                }else if(other.tag < 10 ){//撞到玩家的星星\r\n                    self.tag = -2;\r\n                }else if(other.tag == 20){//撞到障碍物\r\n                    \r\n                }else if(other.tag == 22){//边界\r\n\r\n                }\r\n            }\r\n             \r\n        }\r\n        \r\n    },\r\n    runAction(action){\r\n        //this.isActionOver = false;\r\n      /*  let self = this;\r\n        var finished = cc.callFunc(()=>{\r\n            self.isActionOver = true;\r\n        }, this, 0);*/\r\n        this.node.stopAllActions();\r\n        //var myAction = cc.sequence(action, finished);\r\n        this.node.runAction(action);\r\n    },\r\n});\r\n"]}