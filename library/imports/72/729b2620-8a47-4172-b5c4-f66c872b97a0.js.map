{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\utils/assets\\scripts\\utils\\objectPool.js"],"names":["starPool","playPool","cc","NodePool","console","log","e","warn","message","module","exports","recoveryStar","starPrefab","getComponent","tag","put","recoveryPlay","playPrefab","createStar","star","size","get","instantiate","createPlay","play"],"mappings":";;;;;;AAAA,IAAIA,iBAAJ;AACA,IAAIC,iBAAJ;AACA,IAAI;AACAD,eAAW,IAAIE,GAAGC,QAAP,EAAX;AACAF,eAAW,IAAIC,GAAGC,QAAP,EAAX;AACAC,YAAQC,GAAR,CAAY,YAAZ;AAEH,CALD,CAKE,OAAOC,CAAP,EAAU;AACXF,YAAQG,IAAR,CAAa,SAAOD,EAAEE,OAAtB;AACA;AACDC,OAAOC,OAAP,GAAiB;AACbV,cAAUA,QADG;AAEbC,cAAUA,QAFG;AAGbU,kBAAa,sBAASC,UAAT,EAAoB;AAC7BR,gBAAQC,GAAR,CAAYO,WAAWC,YAAX,CAAwB,aAAxB,EAAuCC,GAAnD;AACAF,mBAAWC,YAAX,CAAwB,aAAxB,EAAuCC,GAAvC,GAA6C,CAAC,CAA9C;AACA,aAAKd,QAAL,CAAce,GAAd,CAAkBH,UAAlB;AACH,KAPY;AAQbI,kBAAa,sBAASC,UAAT,EAAoB;AAC7B,aAAKhB,QAAL,CAAcc,GAAd,CAAkBE,UAAlB;AACH,KAVY;AAWbC,gBAAY,oBAASN,UAAT,EAAoB;AAC5B,YAAIO,OAAO,IAAX;AACA,YAAInB,SAASoB,IAAT,KAAkB,CAAtB,EAAyB;AAAE;AACvBD,mBAAOnB,SAASqB,GAAT,EAAP;AACH,SAFD,MAEO;AAAE;AACLF,mBAAOjB,GAAGoB,WAAH,CAAeV,UAAf,CAAP;AACH;AACD,eAAOO,IAAP;AACH,KAnBY;AAoBbI,gBAAY,oBAASN,UAAT,EAAoB;AAC5B,YAAIO,OAAO,IAAX;AACA,YAAIvB,SAASmB,IAAT,KAAkB,CAAtB,EAAyB;AAAE;AACvBI,mBAAOvB,SAASoB,GAAT,EAAP;AACH,SAFD,MAEO;AAAE;AACLG,mBAAOtB,GAAGoB,WAAH,CAAeL,UAAf,CAAP;AACH;AACD,eAAOO,IAAP;AACH;;AA5BY,CAAjB","file":"objectPool.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\utils","sourcesContent":["let starPool;\r\nlet playPool;\r\ntry {\r\n    starPool = new cc.NodePool();\r\n    playPool = new cc.NodePool();\r\n    console.log('objectPool');\r\n    \r\n} catch (e) {\r\n\tconsole.warn(\"fail\"+e.message);\r\n}\r\nmodule.exports = {\r\n    starPool: starPool,\r\n    playPool: playPool,\r\n    recoveryStar:function(starPrefab){\r\n        console.log(starPrefab.getComponent('cc.Collider').tag);\r\n        starPrefab.getComponent('cc.Collider').tag = -1;\r\n        this.starPool.put(starPrefab);\r\n    },\r\n    recoveryPlay:function(playPrefab){\r\n        this.playPool.put(playPrefab);\r\n    },\r\n    createStar: function(starPrefab){\r\n        let star = null;\r\n        if (starPool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            star = starPool.get();\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            star = cc.instantiate(starPrefab);\r\n        }\r\n        return star;\r\n    },\r\n    createPlay: function(playPrefab){\r\n        let play = null;\r\n        if (playPool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            play = playPool.get();\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            play = cc.instantiate(playPrefab);\r\n        }\r\n        return play;\r\n    },\r\n    \r\n};"]}